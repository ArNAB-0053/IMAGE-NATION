"use client";

import { Download, RefreshCw, Share2 } from "lucide-react";
import { Card, CardContent } from "./ui/card";
import Image from "next/image";
import { useState } from "react";
import { Input } from "./ui/input";
import { Button } from "./ui/button";

const GenerateImage = () => {
  const [prompt, setPrompt] = useState("");
  const [isGenerating] = useState(false); // Disabled generation state
  const [generatedImage] = useState(""); // No generated image
  const [recentGenerations] = useState([
    {
      prompt: "Cyberpunk city with neon lights and flying cars",
      image: "/Images/galary5.jpg",
    },
    {
      prompt: "Futuristic space station orbiting a purple nebula",
      image: "/Images/galary1.jpg",
    },
    {
      prompt: "Biomechanical android with glowing circuits",
      image: "/Images/galary16.jpg",
    },
  ]);

  // Disabled generate function with a note
  const generateImage = () => {
    // Do nothing since backend isn't ready
    console.log("Image generation is coming soon!");
  };

  return (
    <div className="text-white py-20 ">
      <section id="generate-section" className="container mx-auto px-6 md:px-10 lg:px-16">
        <h2 className="text-4xl md:text-5xl font-extrabold text-center mb-16 tracking-tight">
          <span className="bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-cyan-500">
            Create Your Vision
          </span>
        </h2>

        {/* Input and Generate Button */}
        <div className="max-w-3xl mx-auto mb-12 relative">
          <div className="flex gap-4 items-center opacity-60 pointer-events-none">
            <Input
              className="flex-grow bg-gray-800/50 backdrop-blur-md border border-gray-700/30 rounded-xl h-14 px-5 text-lg text-gray-200 placeholder-gray-500 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
              placeholder="Describe your imagination..."
              value={prompt}
              onChange={(e) => setPrompt(e.target.value)}
              onKeyDown={(e) => e.key === "Enter" && generateImage()}
              disabled // Disable input
            />
            <Button
              className="bg-gradient-to-r from-purple-600 to-cyan-500 h-14 px-8 rounded-xl text-lg font-semibold disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300"
              onClick={generateImage}
              disabled // Disable button
            >
              Generate
            </Button>
          </div>
          {/* Coming Soon Badge */}
          <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
            <span className="bg-gray-900/80 backdrop-blur-md text-purple-300 text-lg font-medium px-6 py-2 rounded-full shadow-md">
              Coming Soon
            </span>
          </div>
          <p className="text-center text-gray-400/70 text-sm mt-3">
            Image generation is not yet availableâ€”stay tuned for backend integration!
          </p>
        </div>

        {/* Generated Image Display */}
        <div className="max-w-3xl mx-auto">
          <div className="relative bg-gray-800/50 backdrop-blur-xl border border-gray-700/40 rounded-2xl p-6 min-h-[512px] flex items-center justify-center shadow-lg">
            <p className="text-gray-400/70 text-lg italic text-center">
              Your creation will appear here once the backend is ready...
            </p>
          </div>
        </div>

        {/* Recent Generations with Disclaimer */}
        {recentGenerations.length > 0 && (
          <section className="mt-16">
            <h2 className="text-3xl font-bold mb-4 text-gray-100">Recent Creations (UI Preview)</h2>
            <p className="text-gray-400/70 text-sm mb-6 text-center">
              Note: These are placeholder images for UI purposes only, not generated by this model.
            </p>
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
              {recentGenerations.map((gen, index) => (
                <Card
                  key={index}
                  className="bg-gray-800/50 backdrop-blur-md border border-gray-700/30 rounded-xl overflow-hidden group hover:border-purple-500/60 hover:shadow-xl transition-all duration-300"
                >
                  <CardContent className="p-0">
                    <div className="relative overflow-hidden">
                      <Image
                        src={gen.image}
                        alt={gen.prompt}
                        width={400}
                        height={400}
                        className="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
                      />
                    </div>
                    <div className="p-4">
                      <p className="text-sm text-gray-300/80 line-clamp-2">{gen.prompt}</p>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </section>
        )}
      </section>
    </div>
  );
};

export default GenerateImage;